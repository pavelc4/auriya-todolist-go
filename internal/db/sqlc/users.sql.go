// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.30.0
// source: users.sql

package db

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const createUser = `-- name: CreateUser :one
INSERT INTO users (email, full_name, provider, provider_user_id, avatar_url)
VALUES ($1, $2, $3, $4, $5)
RETURNING id, email, full_name, provider, provider_user_id, password, age, avatar_url, created_at, updated_at, last_login
`

type CreateUserParams struct {
	Email          string      `json:"email"`
	FullName       pgtype.Text `json:"full_name"`
	Provider       string      `json:"provider"`
	ProviderUserID string      `json:"provider_user_id"`
	AvatarUrl      *string     `json:"avatar_url"`
}

func (q *Queries) CreateUser(ctx context.Context, arg CreateUserParams) (User, error) {
	row := q.db.QueryRow(ctx, createUser,
		arg.Email,
		arg.FullName,
		arg.Provider,
		arg.ProviderUserID,
		arg.AvatarUrl,
	)
	var i User
	err := row.Scan(
		&i.ID,
		&i.Email,
		&i.FullName,
		&i.Provider,
		&i.ProviderUserID,
		&i.Password,
		&i.Age,
		&i.AvatarUrl,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.LastLogin,
	)
	return i, err
}

const getUserByEmail = `-- name: GetUserByEmail :one
SELECT id, email, full_name, provider, provider_user_id, password, age, avatar_url, created_at, updated_at, last_login FROM users WHERE email = $1
`

func (q *Queries) GetUserByEmail(ctx context.Context, email string) (User, error) {
	row := q.db.QueryRow(ctx, getUserByEmail, email)
	var i User
	err := row.Scan(
		&i.ID,
		&i.Email,
		&i.FullName,
		&i.Provider,
		&i.ProviderUserID,
		&i.Password,
		&i.Age,
		&i.AvatarUrl,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.LastLogin,
	)
	return i, err
}

const getUserByID = `-- name: GetUserByID :one
SELECT id, email, full_name, provider, provider_user_id, password, age, avatar_url, created_at, updated_at, last_login FROM users WHERE id = $1
`

func (q *Queries) GetUserByID(ctx context.Context, id int64) (User, error) {
	row := q.db.QueryRow(ctx, getUserByID, id)
	var i User
	err := row.Scan(
		&i.ID,
		&i.Email,
		&i.FullName,
		&i.Provider,
		&i.ProviderUserID,
		&i.Password,
		&i.Age,
		&i.AvatarUrl,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.LastLogin,
	)
	return i, err
}
